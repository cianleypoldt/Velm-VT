name: Velm-VT CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: macos-latest
            compiler: msvc
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libglfw3-dev libhdf5-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install glfw hdf5

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          vcpkg install glfw3:x64-windows hdf5:x64-windows

      - name: Configure (GCC)
        if: matrix.compiler == 'gcc'
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++

      - name: Configure (Clang)
        if: matrix.compiler == 'clang'
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Configure (MSVC)
        if: matrix.compiler == 'msvc'
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      - name: Run Tests
        run: |
          cd build/bin
          ./VelmVT_tests
